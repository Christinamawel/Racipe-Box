@model RecipeBox.Models.Recipe

<h2>Recipe Details</h2>
<hr />
<h3>@Html.DisplayNameFor(model => model.Name): @Html.DisplayFor(model => model.Name)</h3>
<h3>@Html.DisplayNameFor(model => model.Directions): @Html.DisplayFor(model => model.Directions)</h3>
<h3>@Html.DisplayNameFor(model => model.Rating): @Html.DisplayFor(model => model.Rating)</h3>

@if(Model.JoinEntities.Count == 0)
{
  <p>This recipe does not belong to any categories</p>
}
else
{
  <h4>Categories the recipe belongs to:</h4>
  <ul>
  @foreach(var join in Model.JoinEntities)
  {
    <li>@join.Category.Name</li>
    @using (Html.BeginForm("DeleteCategory", "Recipes"))
    {
      @Html.Hidden("joinId", @join.CategoryRecipeId)
      @Html.Hidden("recipeId", @Model.RecipeId)
      <input type="submit" value="Delete"/>
    }
  }
  </ul>
}
<h4>Ingredients List</h4>
@if(Model.JoinIngredients.Count == 0)
{
  <p>This recipe currently has no ingredients</p>
}
else
{
  <ul>
    @foreach(var join in Model.JoinIngredients)
    {
      <li>@join.ingredient.Name</li>
      @using (Html.BeginForm("DeleteIngredient", "Recipes"))
      {
        @Html.Hidden("joinId", @join.IngredientRecipeId)
        @Html.Hidden("recipeId", @Model.RecipeId)
        <input type="submit" value="Delete"  class="btn btn-danger" />
      }
    }
  </ul>
}

<p>@Html.ActionLink("Back to list", "Index")</p>
<p>@Html.ActionLink("Edit Recipe", "Edit", new { id = Model.RecipeId })</p>
<p>@Html.ActionLink("Delete Recipe", "Delete", new { id = Model.RecipeId })</p>
<p>@Html.ActionLink("Add a Category", "AddCategory", new { id = Model.RecipeId })</p>
<p>@Html.ActionLink("Add Ingredients", "AddIngredient", new { id = Model.RecipeId }, new { str = "ok"})</p>